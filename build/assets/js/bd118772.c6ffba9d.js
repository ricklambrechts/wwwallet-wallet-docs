"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[324],{3905:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>d});var t=n(7294);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=t.createContext({}),u=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},c=function(e){var r=u(e.components);return t.createElement(l.Provider,{value:r},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),g=s,d=p["".concat(l,".").concat(g)]||p[g]||f[g]||i;return n?t.createElement(d,a(a({ref:r},c),{},{components:n})):t.createElement(d,a({ref:r},c))}));function d(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var i=n.length,a=new Array(i);a[0]=g;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[p]="string"==typeof e?e:s,a[1]=o;for(var u=2;u<i;u++)a[u]=n[u];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},705:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var t=n(7462),s=(n(7294),n(3905));const i={sidebar_position:2},a="Configuring an issuer",o={unversionedId:"enterprise-issuer/configuring-issuer",id:"enterprise-issuer/configuring-issuer",title:"Configuring an issuer",description:"Initialize a legal person wallet",source:"@site/docs/enterprise-issuer/02-configuring-issuer.md",sourceDirName:"enterprise-issuer",slug:"/enterprise-issuer/configuring-issuer",permalink:"/docs/docs/enterprise-issuer/configuring-issuer",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Application Setup",permalink:"/docs/docs/enterprise-issuer/application-setup"},next:{title:"Configuring the supported credentials for an issuer",permalink:"/docs/docs/enterprise-issuer/configuring-credentials"}},l={},u=[{value:"Initialize a legal person wallet",id:"initialize-a-legal-person-wallet",level:2},{value:"Create an issuer instance",id:"create-an-issuer-instance",level:2}],c={toc:u},p="wrapper";function f(e){let{components:r,...n}=e;return(0,s.kt)(p,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"configuring-an-issuer"},"Configuring an issuer"),(0,s.kt)("h2",{id:"initialize-a-legal-person-wallet"},"Initialize a legal person wallet"),(0,s.kt)("p",null,"On the file ",(0,s.kt)("inlineCode",{parentName:"p"},"src/configuration/IssuersConfiguration.ts")," you write code to read the keys of the legal persons and store them.\nThe keys must conform to the ",(0,s.kt)("inlineCode",{parentName:"p"},"LegalPersonWallet")," type."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/configuration/IssuersConfiguration.ts",title:"src/configuration/IssuersConfiguration.ts"},"const uoaKeysPath = path.join(__dirname, '../../../keys/issuer-did.uoa.keys');\nif(!fs.existsSync(uoaKeysPath))\n    throw new Error('Keyfile does not exist');\n\nconst keysFile = fs.readFileSync(uoaKeysPath, 'utf-8'); // read keys from the file system\nconst uoaLegalPersonWallet = JSON.parse(keysFile) as LegalPersonWallet;\n\n\nconst legalPersonWallets: LegalPersonWallet[] = [];\nlegalPersonWallets.push(uoaLegalPersonWallet)\n...\n")),(0,s.kt)("h2",{id:"create-an-issuer-instance"},"Create an issuer instance"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/configuration/IssuersConfiguration.ts",title:"src/configuration/IssuersConfiguration.ts"},'...\nconst uoaIssuer = new CredentialIssuerConfig(\n    config.url + "/uoa",    // credential issuer identifier must be a unique url of the issuer\n    uoaLegalPersonWallet,   // the Legal Person Wallet with which the credentials will be issued\n    config.url, // the authorization server url remains the same for all the issuers\n    config.url + "/openid4vci/credential",  // Credential endpoint is the same for all issuers\n);\n\nexport const issuersConfigurations = new Map<string, CredentialIssuerConfig>();\n// issuers.set(mainIssuer.metadata.credential_issuer, mainIssuer);\nissuersConfigurations.set(uoaIssuer.credentialIssuerIdentifier, uoaIssuer);\n\n')))}f.isMDXComponent=!0}}]);