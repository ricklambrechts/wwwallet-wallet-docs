"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[912],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),h=i,m=d["".concat(c,".").concat(h)]||d[h]||p[h]||o;return n?r.createElement(m,a(a({ref:t},l),{},{components:n})):r.createElement(m,a({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4242:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:4},a="Configuring the authentication mechanism",s={unversionedId:"enterprise-issuer/authentication",id:"enterprise-issuer/authentication",title:"Configuring the authentication mechanism",description:"Adding Authentication Methods",source:"@site/docs/enterprise-issuer/04-authentication.md",sourceDirName:"enterprise-issuer",slug:"/enterprise-issuer/authentication",permalink:"/wallet-docs/docs/enterprise-issuer/authentication",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Configuring the supported credentials for an issuer",permalink:"/wallet-docs/docs/enterprise-issuer/configuring-credentials"},next:{title:"Enterprise Wallet Core",permalink:"/wallet-docs/docs/category/enterprise-wallet-core"}},c={},u=[{value:"Adding Authentication Methods",id:"adding-authentication-methods",level:2},{value:"Extending the req.userSession object",id:"extending-the-requsersession-object",level:2}],l={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuring-the-authentication-mechanism"},"Configuring the authentication mechanism"),(0,i.kt)("h2",{id:"adding-authentication-methods"},"Adding Authentication Methods"),(0,i.kt)("p",null,"The Enterprise Issuer uses PassportJS for authorization & authentication, which means that custom authentication implementations can be used."),(0,i.kt)("p",null,"To create a new Authentication mechanism, create a file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/authorization")," folder. This file should contain a function, which creates an Authentication Method."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/authorization/addLocalAuthMethod.ts",title:"src/authorization/addLocalAuthMethod.ts"},"export function addLocalAuthMethod(\n    entrypoint: string,\n    authorizationRouter: any,\n    authenticationCb: (res: Response) => void\n) {}\n")),(0,i.kt)("p",null,"Then, custom authentication mechanisms can be added in the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/authorization/router.ts")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=src/authorization/router.ts",title:"src/authorization/router.ts"},"addLocalAuthMethod('/login', authorizationRouter, (res) => {\n    return res.redirect('/authorization/consent')\n});\n")),(0,i.kt)("h2",{id:"extending-the-requsersession-object"},"Extending the req.userSession object"),(0,i.kt)("p",null,"To extend the ",(0,i.kt)("inlineCode",{parentName:"p"},"req.userSession")," with additional attibutes, you can define new attributes on the ",(0,i.kt)("inlineCode",{parentName:"p"},"src/configuration/session/AdditionalProperties.ts")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=src/configuration/session/AdditionalProperties.ts",title:"src/configuration/session/AdditionalProperties.ts"},"/**\n * Provide additional data for a user-session\n */\nexport type AdditionalSessionData = {\n    \n    // authentication component variables\n    taxisid?: string;\n\n    // fetchingCredentials from external sources\n    ediplomasResponse?: EdiplomasResponseSchema;\n}\n")))}p.isMDXComponent=!0}}]);